---
import DefaultLayout from '../layouts/DefaultLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'
import PasswordGeneratorTest from '../components/react/PasswordGeneratorTest.jsx'
import React from 'react';
export async function getStaticPaths({ paginate }) {
  const response = await fetch('https://jsonplaceholder.typicode.com/posts')
  const data = await response.json()

  return paginate(data, { pageSize: 6 })
}

const { page } = Astro.props
---

<DefaultLayout title="Random Password Generator" description="An example of a Random Password Generation Component.">
  <section class="my-12">
    <div class="space-content container">
      <h1>Random Password Generator</h1>
      <p class="text-2xl">An example of a Random Password Generation Component.</p>
    </div>

    <!-- <password-generator class="">
      <div class="container">
        <button class="password-generator-button" data-password-generator-button>Generate Password</button>
        <p class="generated-password" generated-password></p>
      </div>
    </password-generator> -->


    <PasswordGeneratorTest client:load/>
  </section>
  <section class="my-12">
    <div class="container"></div>
  </section>
</DefaultLayout>

<script>
  // class PasswordGenerator extends HTMLElement {
  //   constructor() {
  //     super()

  //     const button = this.querySelector('[data-password-generator-button]')
  //     const generatedPassword = this.querySelector('[generated-password]')
  //     button?.addEventListener('click', () => generatePassword(12))

  //     function generatePassword(length) {
  //       // Define character sets for different types of characters
  //       const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  //       const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz'
  //       const numberChars = '0123456789'
  //       const specialChars = '!@#$%^&*()_-+=<>?'

  //       // Combine all character sets
  //       const allChars = uppercaseChars + lowercaseChars + numberChars + specialChars

  //       let password = ''

  //       // Generate the password
  //       for (let i = 0; i < length; i++) {
  //         const randomIndex = Math.floor(Math.random() * allChars.length)
  //         password += allChars.charAt(randomIndex)
  //       }

  //       if (generatedPassword) {
  //         generatedPassword.textContent = password
  //       }
  //     }
  //   }
  // }

  // customElements.define('password-generator', PasswordGenerator)
</script>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .password-generator-button {
    @apply my-4;
  }
  .generated-password {
    @apply  text-4xl;
  }
</style>
